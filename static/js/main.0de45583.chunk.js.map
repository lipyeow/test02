{"version":3,"sources":["appSpec.js","App.js","reportWebVitals.js","index.js"],"names":["app_spec","widgets","type","id","value","label","dataref","colspecs","backend","endpoint","query","fetch_on_init","args","title","field","from","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","client","ApolloClient","uri","cache","InMemoryCache","fetchOptions","mode","data_query","gql","DataTable","console","log","state","style","maxWidth","icons","data","columns","cols","options","search","paging","filtering","exportButton","useStyles","makeStyles","theme","root","margin","spacing","width","formControl","minWidth","selectEmpty","marginTop","QueryForm","classes","className","noValidate","autoComplete","map","spec","genWidget","callbacks","wspec","updateData","TextField","onChange","event","handleTextChange","variant","FormControl","InputLabel","Select","labelId","handleSelectChange","MenuItem","values","v","display","Button","trigger","onClick","handleClick","dangerouslySetInnerHTML","__html","accumulateStateEntry","genStateStruct","cur_state","reduce","sleep","ms","Promise","resolve","setTimeout","zip","vals","obj","i","length","updateState","a","url","hdr","Headers","append","method","headers","body","resp","fetch","json","get_options","nextUri","replace","stats","col","name","result","row","App","staging","runUrlFetchQuery","this","target","setState","qid","prestoFetch","push","vars","JSON","stringify","variables","then","parse","getData","colstr","response","Object","keys","x","extractColumnSpec","runPrestoQuery","runNativeQuery","runConstantQuery","d","c","ApolloProvider","generateWidget","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0de45583.chunk.js","sourcesContent":["\nconst app_spec = {\n  widgets : [\n    { type: \"text\",\n      id: \"txt1\",\n      value: \"<h1>My Test Website</h1>\"\n    },\n    { \n      type: \"table\",\n      id  : \"t1\",\n      label: \"DNS\",\n      dataref: \"q1\",\n      colspecs: []\n    },\n    { \n      type: \"query\",\n      id  : \"q1\",\n      backend: \"urlfetch\",\n      endpoint: \"r0\",\n      query: \"https://lipyeow.github.io/test02/data/pubs.json\",\n      fetch_on_init: true,\n      args: []\n    },\n    { \n      type: \"query\",\n      id  : \"q2\",\n      backend: \"constant\",\n      endpoint: \"r0\",\n      query: { \"cols\": [\n            { title: 'Year', field: 'year' },\n            { title: 'Title', field: 'title' },\n            { title: 'Venue', field: 'venue' }\n          ], \"data\": [\n  {\n    \"year\": \"2020\",\n    \"title\": \"John et al\",\n    \"venue\": \"vldb\"\n  },\n  {\n    \"year\": \"2021\",\n    \"title\": \"Tim et al\",\n    \"venue\": \"sigmod\"\n  }\n]},\n      args: [{from: \"ti1\"}, {from: \"ti1\"}, {from: \"m1\"}, {from: \"m1\"}]\n    }\n  ],\n};\n\nexport { app_spec };\n","import \"./App.css\";\n\nimport MaterialTable from \"material-table\";\nimport { ApolloClient, InMemoryCache, useQuery, gql } from \"@apollo/client\";\nimport { ApolloProvider } from \"@apollo/client/react\";\n\nimport { Component, forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { app_spec } from \"./appSpec\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst client = new ApolloClient({\n  uri: \"http://127.0.0.1:4000/graphql\",\n  cache: new InMemoryCache(),\n  fetchOptions: {\n    mode: \"no-cors\",\n  },\n});\nconst data_query = gql`\n  query GetData($endpoint: String!, $query: String!, $args: String) {\n    getData(endpoint: $endpoint, query: $query, args: $args) {\n      data\n      colstr\n      columns {\n        title\n        field\n      }\n    }\n  }\n`;\n\nfunction DataTable(args) {\n  //    const { loading, error, data } = useQuery(data_query,\n  //            { variables: {id: args.tid} });\n  //\n  //    if (loading) return <p>Loading...</p>;\n  //    if (error) return <p>Error {error.message} </p>;\n  //\n  //    args.updateData(args.tid, JSON.parse(data.getData.data), JSON.parse(data.getData.colstr));\n  //JSON.parse(data.getData.data)\n  //JSON.parse(data.getData.colstr)\n  //console.log(\"typedef : \" + typeof(args.updateData))\n  console.log(args.state[args.id]);\n  return (\n    <div style={{ maxWidth: \"100%\" }}>\n      <MaterialTable\n        icons={tableIcons}\n        title={args.label}\n        data={args.state[args.state[args.id].dataref].data}\n        columns={args.state[args.state[args.id].dataref].cols}\n        options={{\n          search: true,\n          paging: false,\n          filtering: true,\n          exportButton: true,\n        }}\n      />\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction QueryForm(args) {\n  const classes = useStyles();\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {args.widgets.map((spec) =>\n        genWidget(spec, args.callbacks, args.state, classes)\n      )}\n    </form>\n  );\n}\n\nfunction genWidget(wspec, callbacks, state, classes) {\n  switch (wspec.type) {\n    case \"form\":\n      return (\n        <QueryForm\n          key={wspec.id}\n          callbacks={callbacks}\n          state={state}\n          widgets={wspec.widgets}\n        />\n      );\n    case \"table\":\n      return (\n        <DataTable\n          key={wspec.id}\n          id={wspec.id}\n          label={wspec.label}\n          state={state}\n          updateData={callbacks.updateData}\n        />\n      );\n    case \"text_input\":\n      return (\n        <TextField\n          key={wspec.id}\n          state={state}\n          id=\"queryinput\"\n          label={wspec.label}\n          onChange={(event) => callbacks.handleTextChange(wspec.id, event)}\n          variant=\"outlined\"\n        />\n      );\n    case \"menu\":\n      return (\n        <FormControl\n          key={wspec.id}\n          state={state}\n          variant=\"filled\"\n          className={classes.formControl}\n        >\n          <InputLabel id=\"demo-simple-select-filled-label\">\n            {wspec.label}\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-filled-label\"\n            id=\"qtypedropdown\"\n            value={state[wspec.id].value}\n            onChange={(event) => callbacks.handleSelectChange(wspec.id, event)}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {wspec.values.map((v) => {\n              return (\n                <MenuItem key={v.id} value={v.value}>\n                  {v.display}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      );\n    case \"button\":\n      return (\n        <Button\n          key={wspec.id}\n          state={state}\n          id={wspec.id}\n          trigger={wspec.trigger}\n          variant=\"contained\"\n          onClick={() => callbacks.handleClick(wspec.id)}\n        >\n          {wspec.label}\n        </Button>\n      );\n    case \"text\":\n      return (\n        <div key={wspec.id} dangerouslySetInnerHTML={{ __html: wspec.value }} />\n      );\n    default:\n      return null;\n  }\n}\n\nfunction accumulateStateEntry(state, wspec) {\n  switch (wspec.type) {\n    case \"table\":\n      state[wspec.id] = {\n        dataref: wspec.dataref,\n        cols: [],\n        colspecs: wspec.colspecs,\n      };\n      break;\n    case \"query\":\n      state[wspec.id] = {\n        data: [],\n        cols: [],\n        backend: wspec.backend,\n        endpoint: wspec.endpoint,\n        query: wspec.query,\n        args: wspec.args,\n      };\n      if (wspec.backend === \"constant\") {\n        state[wspec.id].data = wspec.query.data;\n        state[wspec.id].cols = wspec.query.cols;\n      }\n      break;\n    case \"text_input\":\n    case \"menu\":\n      state[wspec.id] = { value: \"\" };\n      break;\n    case \"button\":\n      state[wspec.id] = { value: \"\", trigger: wspec.trigger };\n      break;\n    case \"text\":\n      state[wspec.id] = { value: wspec.value };\n      break;\n    case \"form\":\n      genStateStruct(state, wspec.widgets);\n      break;\n    default:\n      break;\n  }\n  return state;\n}\n\nfunction genStateStruct(cur_state, widgets) {\n  return widgets.reduce(accumulateStateEntry, cur_state);\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nfunction zip(cols, vals) {\n  const obj = {};\n  for (var i = 0; i < cols.length; i++) {\n    obj[cols[i]] = vals[i];\n  }\n  return obj;\n}\n\nasync function prestoFetch(query, updateState) {\n  // uri needs to be fudged for nginx proxy\n  const url = \"http://localhost:5000/presto/v1/statement\";\n  const hdr = new Headers();\n  hdr.append(\"Content-Type\", \"text/plain\");\n  hdr.append(\"Access-Control-Allow-Origin\", \"*\");\n  hdr.append(\"X-Presto-User\", \"l002\");\n\n  const options = {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    //mode: 'no-cors', // no-cors, *cors, same-origin\n    headers: hdr,\n    body: query, // body data type must match \"Content-Type\" header\n  };\n  console.log(url);\n  console.log(options);\n  var resp = {};\n  try {\n    resp = await (await fetch(url, options)).json();\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.log(resp);\n\n  const get_options = {\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n    headers: hdr,\n  };\n\n  // hack to handle nginx proxy\n  const nextUri = resp.nextUri.replace(\":8080/\", \":5000/presto/\");\n\n  console.log(nextUri);\n  console.log(get_options);\n  var state = resp.stats.state;\n  for (var i = 0; i < 8; i++) {\n    await sleep(4000);\n    try {\n      resp = await (await fetch(nextUri, get_options)).json();\n    } catch (e) {\n      console.log(e);\n    }\n    state = resp.stats.state;\n    console.log(resp);\n    if (state === \"FINISHING\") break;\n  }\n\n  const cols = resp.columns.map((col) => {\n    return col.name;\n  });\n  const result = {};\n  result[\"data\"] = resp.data.map((row) => {\n    return zip(cols, row);\n  });\n  result[\"cols\"] = cols.map((col) => {\n    return { title: col, field: col };\n  });\n  //console.log(result);\n  //  const resp = await fetch(url, options)\n  //    .then((response) => { return response.text(); })\n  //    .then((data) => { console.log(data);} )\n  //    .catch((error) => {console.log(error);} );\n  //  console.log(resp);\n  updateState(result.data, result.cols);\n  return result;\n}\n\n// extract a table column spec from array of recs\nfunction extractColumnSpec(data) {\n  return Object.keys(data[0]).map((x) => {\n    return { title: x, field: x };\n  });\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.spec = app_spec;\n    this.staging = genStateStruct({}, app_spec.widgets);\n    this.spec.widgets.map((wspec) => {\n      if (\n        wspec.type === \"query\" &&\n        wspec.backend === \"urlfetch\" &&\n        wspec.fetch_on_init\n      ) {\n        this.runUrlFetchQuery(wspec.id);\n      }\n      return null;\n    });\n    this.state = this.staging;\n    console.log(this.state);\n  }\n  handleTextChange(id, event) {\n    console.log(\"handleTextChange(\" + id + \"): \");\n    console.log(this.state);\n    this.staging[id].value = event.target.value;\n  }\n\n  handleSelectChange(id, event) {\n    console.log(\"handleSelectChange(\" + id + \"): \");\n    console.log(this.state);\n    this.staging[id].value = event.target.value;\n    this.setState(this.staging);\n  }\n  runPrestoQuery(qid) {\n    console.log(\"Run Presto Query: \" + qid);\n    prestoFetch(this.staging[qid].query, (data, cols) => {\n      this.staging[qid].data = data;\n      this.staging[qid].cols = cols;\n      console.log(this.staging);\n      this.setState(this.staging);\n    });\n  }\n  runNativeQuery(qid) {\n    // Extract the values for the endpoint query params\n    const args = [];\n    for (const a of this.staging[qid].args) {\n      //console.log(a);\n      args.push(this.staging[a.from].value);\n    }\n    const vars = {\n      endpoint: this.staging[qid].endpoint,\n      query: this.staging[qid].query,\n      args: JSON.stringify(args),\n    };\n    client.query({ query: data_query, variables: vars }).then((result) => {\n      console.log(result);\n      console.log(\"Before setting data: staging = \");\n      console.log(this.staging);\n      console.log(\"qid = \" + qid);\n      this.staging[qid].data = JSON.parse(result.data.getData.data);\n      // TODO: should be smart application of colspecs on the cols\n      this.staging[qid].cols = JSON.parse(result.data.getData.colstr);\n      console.log(\"Before setState: staging = \");\n      console.log(this.staging);\n      this.setState(this.staging);\n    });\n  }\n  runConstantQuery(qid) {\n    console.log(\"Run Constant Query: \" + qid);\n    this.staging[qid].data = this.staging[qid].query.data;\n    this.staging[qid].cols = this.staging[qid].query.cols;\n    console.log(this.staging);\n    this.setState(this.staging);\n  }\n\n  runUrlFetchQuery(qid) {\n    console.log(\"Run Url Fetch Query: \" + qid);\n    let url = this.staging[qid].query;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        this.staging[qid].data = data;\n        this.staging[qid].cols = extractColumnSpec(data);\n        //console.log(this.staging);\n        this.setState(this.staging);\n      });\n  }\n\n  handleClick(id) {\n    console.log(\"handleClick(\" + id + \"): \");\n    const qid = this.staging[id].trigger;\n    switch (this.staging[qid].backend) {\n      case \"presto\":\n        this.runPrestoQuery(qid);\n        break;\n      case \"native\":\n        this.runNativeQuery(qid);\n        break;\n      case \"constant\":\n        this.runConstantQuery(qid);\n        break;\n      default:\n        console.log(\"Unrecognized backend: \" + this.staging[qid].backend);\n        break;\n    }\n  }\n  generateWidget(wspec) {\n    const callbacks = {\n      handleClick: (id) => this.handleClick(id),\n      handleTextChange: (id, event) => this.handleTextChange(id, event),\n      handleSelectChange: (id, event) => this.handleSelectChange(id, event),\n      updateData: (id, d, c) => this.updateData(id, d, c),\n    };\n    return genWidget(wspec, callbacks, this.state, null);\n  }\n\n  render() {\n    return (\n      <div style={{ maxWidth: \"100%\" }}>\n        <ApolloProvider client={client}>\n          {this.spec.widgets.map((spec) => this.generateWidget(spec))}\n        </ApolloProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, useQuery, gql } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}