{"version":3,"sources":["appSpec.js","App.js","reportWebVitals.js","index.js"],"names":["app_spec","widgets","type","id","value","label","dataref","colspecs","title","field","cellStyle","cellWidth","render","rowData","href","pdf","download","options","search","paging","filtering","exportButton","maxBodyHeight","tableLayout","backend","endpoint","query","fetch_on_init","args","from","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","client","ApolloClient","uri","cache","InMemoryCache","fetchOptions","mode","data_query","gql","DataTable","console","log","state","style","maxWidth","icons","data","columns","length","cols","useStyles","makeStyles","theme","root","margin","spacing","width","formControl","minWidth","selectEmpty","marginTop","QueryForm","classes","className","noValidate","autoComplete","map","spec","genWidget","callbacks","wspec","updateData","TextField","onChange","event","handleTextChange","variant","FormControl","InputLabel","Select","labelId","handleSelectChange","MenuItem","values","v","display","Button","trigger","onClick","handleClick","dangerouslySetInnerHTML","__html","accumulateStateEntry","genStateStruct","cur_state","reduce","sleep","ms","Promise","resolve","setTimeout","zip","vals","obj","i","updateState","a","url","hdr","Headers","append","method","headers","body","resp","fetch","json","get_options","nextUri","replace","stats","col","name","result","row","App","staging","runUrlFetchQuery","this","target","setState","qid","prestoFetch","push","vars","JSON","stringify","variables","then","parse","getData","colstr","response","Object","keys","x","extractColumnSpec","runPrestoQuery","runNativeQuery","runConstantQuery","d","c","ApolloProvider","generateWidget","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56a82c81.chunk.js","sourcesContent":["\nconst app_spec = {\n  widgets : [\n    { type: \"text\",\n      id: \"txt1\",\n      value: \"<h1>My Test Website</h1>\"\n    },\n    { type: \"text\",\n      id: \"txt2\",\n      value: \"<h2>Publications</h2>\"\n    },\n\n    { \n      type: \"table\",\n      id  : \"t1\",\n      label: \"\",\n      dataref: \"q1\",\n      colspecs: [{title: \"Year\", field: \"year\", cellStyle: { cellWidth: \"10%\" }},\n                 {title: \"Venue\", field: \"venue\", cellStyle: { cellWidth: \"20%\"}},\n                 {title: \"Title\", field: \"title\", cellStyle: { cellWidth: \"50%\"}},\n                 {title: \"Authors\", field: \"authors\", cellStyle: { cellWidth: \"20%\"}},\n                 {title: \"pdf\", field: \"pdf\", \n                  render: rowData => (\n                    <a href={\"https://lipyeow.github.io/home/\" + rowData.pdf} download>pdf</a> ),\n                 }\n                ],\n      options: {\n          search: true,\n          paging: false,\n          filtering: false,\n          exportButton: true,\n          maxBodyHeight: \"50vh\",\n          tableLayout: \"auto\"\n        }\n    },\n    { \n      type: \"query\",\n      id  : \"q1\",\n      backend: \"urlfetch\",\n      endpoint: \"r0\",\n      query: \"https://lipyeow.github.io/test02/data/pubs.json\",\n      fetch_on_init: true,\n      args: []\n    },\n    { \n      type: \"query\",\n      id  : \"q2\",\n      backend: \"constant\",\n      endpoint: \"r0\",\n      query: { \"cols\": [\n            { title: 'Year', field: 'year' },\n            { title: 'Title', field: 'title' },\n            { title: 'Venue', field: 'venue' }\n          ], \"data\": [\n  {\n    \"year\": \"2020\",\n    \"title\": \"Deep learning\",\n    \"authors\": \"john et al\",\n    \"venue\": \"vldb\"\n  },\n  {\n    \"year\": \"2021\",\n    \"title\": \"<a href=\\\"https://lipyeow.github.io/home/\\\">pdf</a>\",\n    \"authors\": \"Tim et al\",\n    \"venue\": \"sigmod\"\n  }\n]},\n      args: [{from: \"ti1\"}, {from: \"ti1\"}, {from: \"m1\"}, {from: \"m1\"}]\n    }\n  ],\n};\n\nexport { app_spec };\n","import \"./App.css\";\n\nimport MaterialTable from \"material-table\";\nimport { ApolloClient, InMemoryCache, useQuery, gql } from \"@apollo/client\";\nimport { ApolloProvider } from \"@apollo/client/react\";\n\nimport { Component, forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { app_spec } from \"./appSpec\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst client = new ApolloClient({\n  uri: \"http://127.0.0.1:4000/graphql\",\n  cache: new InMemoryCache(),\n  fetchOptions: {\n    mode: \"no-cors\",\n  },\n});\nconst data_query = gql`\n  query GetData($endpoint: String!, $query: String!, $args: String) {\n    getData(endpoint: $endpoint, query: $query, args: $args) {\n      data\n      colstr\n      columns {\n        title\n        field\n      }\n    }\n  }\n`;\n\nfunction DataTable(args) {\n  //    const { loading, error, data } = useQuery(data_query,\n  //            { variables: {id: args.tid} });\n  //\n  //    if (loading) return <p>Loading...</p>;\n  //    if (error) return <p>Error {error.message} </p>;\n  //\n  //    args.updateData(args.tid, JSON.parse(data.getData.data), JSON.parse(data.getData.colstr));\n  //JSON.parse(data.getData.data)\n  //JSON.parse(data.getData.colstr)\n  //console.log(\"typedef : \" + typeof(args.updateData))\n  console.log(args.state[args.id]);\n  return (\n    <div style={{ maxWidth: \"100%\" }}>\n      <MaterialTable\n        icons={tableIcons}\n        title={args.label}\n        data={args.state[args.state[args.id].dataref].data}\n        columns={args.state[args.id].colspecs.length>0 ? args.state[args.id].colspecs : args.state[args.state[args.id].dataref].cols} \n        options={args.state[args.id].options}\n      />\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction QueryForm(args) {\n  const classes = useStyles();\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {args.widgets.map((spec) =>\n        genWidget(spec, args.callbacks, args.state, classes)\n      )}\n    </form>\n  );\n}\n\nfunction genWidget(wspec, callbacks, state, classes) {\n  switch (wspec.type) {\n    case \"form\":\n      return (\n        <QueryForm\n          key={wspec.id}\n          callbacks={callbacks}\n          state={state}\n          widgets={wspec.widgets}\n        />\n      );\n    case \"table\":\n      return (\n        <DataTable\n          key={wspec.id}\n          id={wspec.id}\n          label={wspec.label}\n          state={state}\n          updateData={callbacks.updateData}\n        />\n      );\n    case \"text_input\":\n      return (\n        <TextField\n          key={wspec.id}\n          state={state}\n          id=\"queryinput\"\n          label={wspec.label}\n          onChange={(event) => callbacks.handleTextChange(wspec.id, event)}\n          variant=\"outlined\"\n        />\n      );\n    case \"menu\":\n      return (\n        <FormControl\n          key={wspec.id}\n          state={state}\n          variant=\"filled\"\n          className={classes.formControl}\n        >\n          <InputLabel id=\"demo-simple-select-filled-label\">\n            {wspec.label}\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-filled-label\"\n            id=\"qtypedropdown\"\n            value={state[wspec.id].value}\n            onChange={(event) => callbacks.handleSelectChange(wspec.id, event)}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {wspec.values.map((v) => {\n              return (\n                <MenuItem key={v.id} value={v.value}>\n                  {v.display}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      );\n    case \"button\":\n      return (\n        <Button\n          key={wspec.id}\n          state={state}\n          id={wspec.id}\n          trigger={wspec.trigger}\n          variant=\"contained\"\n          onClick={() => callbacks.handleClick(wspec.id)}\n        >\n          {wspec.label}\n        </Button>\n      );\n    case \"text\":\n      return (\n        <div key={wspec.id} dangerouslySetInnerHTML={{ __html: wspec.value }} />\n      );\n    default:\n      return null;\n  }\n}\n\nfunction accumulateStateEntry(state, wspec) {\n  switch (wspec.type) {\n    case \"table\":\n      state[wspec.id] = {\n        dataref: wspec.dataref,\n        cols: [],\n        colspecs: wspec.colspecs,\n        options: wspec.options\n      };\n      break;\n    case \"query\":\n      state[wspec.id] = {\n        data: [],\n        cols: [],\n        backend: wspec.backend,\n        endpoint: wspec.endpoint,\n        query: wspec.query,\n        args: wspec.args,\n      };\n      if (wspec.backend === \"constant\") {\n        state[wspec.id].data = wspec.query.data;\n        state[wspec.id].cols = wspec.query.cols;\n      }\n      break;\n    case \"text_input\":\n    case \"menu\":\n      state[wspec.id] = { value: \"\" };\n      break;\n    case \"button\":\n      state[wspec.id] = { value: \"\", trigger: wspec.trigger };\n      break;\n    case \"text\":\n      state[wspec.id] = { value: wspec.value };\n      break;\n    case \"form\":\n      genStateStruct(state, wspec.widgets);\n      break;\n    default:\n      break;\n  }\n  return state;\n}\n\nfunction genStateStruct(cur_state, widgets) {\n  return widgets.reduce(accumulateStateEntry, cur_state);\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nfunction zip(cols, vals) {\n  const obj = {};\n  for (var i = 0; i < cols.length; i++) {\n    obj[cols[i]] = vals[i];\n  }\n  return obj;\n}\n\nasync function prestoFetch(query, updateState) {\n  // uri needs to be fudged for nginx proxy\n  const url = \"http://localhost:5000/presto/v1/statement\";\n  const hdr = new Headers();\n  hdr.append(\"Content-Type\", \"text/plain\");\n  hdr.append(\"Access-Control-Allow-Origin\", \"*\");\n  hdr.append(\"X-Presto-User\", \"l002\");\n\n  const options = {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    //mode: 'no-cors', // no-cors, *cors, same-origin\n    headers: hdr,\n    body: query, // body data type must match \"Content-Type\" header\n  };\n  console.log(url);\n  console.log(options);\n  var resp = {};\n  try {\n    resp = await (await fetch(url, options)).json();\n  } catch (e) {\n    console.log(e);\n  }\n\n  console.log(resp);\n\n  const get_options = {\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n    headers: hdr,\n  };\n\n  // hack to handle nginx proxy\n  const nextUri = resp.nextUri.replace(\":8080/\", \":5000/presto/\");\n\n  console.log(nextUri);\n  console.log(get_options);\n  var state = resp.stats.state;\n  for (var i = 0; i < 8; i++) {\n    await sleep(4000);\n    try {\n      resp = await (await fetch(nextUri, get_options)).json();\n    } catch (e) {\n      console.log(e);\n    }\n    state = resp.stats.state;\n    console.log(resp);\n    if (state === \"FINISHING\") break;\n  }\n\n  const cols = resp.columns.map((col) => {\n    return col.name;\n  });\n  const result = {};\n  result[\"data\"] = resp.data.map((row) => {\n    return zip(cols, row);\n  });\n  result[\"cols\"] = cols.map((col) => {\n    return { title: col, field: col };\n  });\n  //console.log(result);\n  //  const resp = await fetch(url, options)\n  //    .then((response) => { return response.text(); })\n  //    .then((data) => { console.log(data);} )\n  //    .catch((error) => {console.log(error);} );\n  //  console.log(resp);\n  updateState(result.data, result.cols);\n  return result;\n}\n\n// extract a table column spec from array of recs\nfunction extractColumnSpec(data) {\n  return Object.keys(data[0]).map((x) => {\n    return { title: x, field: x };\n  });\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.spec = app_spec;\n    this.staging = genStateStruct({}, app_spec.widgets);\n    this.spec.widgets.map((wspec) => {\n      if (\n        wspec.type === \"query\" &&\n        wspec.backend === \"urlfetch\" &&\n        wspec.fetch_on_init\n      ) {\n        this.runUrlFetchQuery(wspec.id);\n      }\n      return null;\n    });\n    this.state = this.staging;\n    console.log(this.state);\n  }\n  handleTextChange(id, event) {\n    console.log(\"handleTextChange(\" + id + \"): \");\n    console.log(this.state);\n    this.staging[id].value = event.target.value;\n  }\n\n  handleSelectChange(id, event) {\n    console.log(\"handleSelectChange(\" + id + \"): \");\n    console.log(this.state);\n    this.staging[id].value = event.target.value;\n    this.setState(this.staging);\n  }\n  runPrestoQuery(qid) {\n    console.log(\"Run Presto Query: \" + qid);\n    prestoFetch(this.staging[qid].query, (data, cols) => {\n      this.staging[qid].data = data;\n      this.staging[qid].cols = cols;\n      console.log(this.staging);\n      this.setState(this.staging);\n    });\n  }\n  runNativeQuery(qid) {\n    // Extract the values for the endpoint query params\n    const args = [];\n    for (const a of this.staging[qid].args) {\n      //console.log(a);\n      args.push(this.staging[a.from].value);\n    }\n    const vars = {\n      endpoint: this.staging[qid].endpoint,\n      query: this.staging[qid].query,\n      args: JSON.stringify(args),\n    };\n    client.query({ query: data_query, variables: vars }).then((result) => {\n      console.log(result);\n      console.log(\"Before setting data: staging = \");\n      console.log(this.staging);\n      console.log(\"qid = \" + qid);\n      this.staging[qid].data = JSON.parse(result.data.getData.data);\n      // TODO: should be smart application of colspecs on the cols\n      this.staging[qid].cols = JSON.parse(result.data.getData.colstr);\n      console.log(\"Before setState: staging = \");\n      console.log(this.staging);\n      this.setState(this.staging);\n    });\n  }\n  runConstantQuery(qid) {\n    console.log(\"Run Constant Query: \" + qid);\n    this.staging[qid].data = this.staging[qid].query.data;\n    this.staging[qid].cols = this.staging[qid].query.cols;\n    console.log(this.staging);\n    this.setState(this.staging);\n  }\n\n  runUrlFetchQuery(qid) {\n    console.log(\"Run Url Fetch Query: \" + qid);\n    let url = this.staging[qid].query;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        this.staging[qid].data = data;\n        this.staging[qid].cols = extractColumnSpec(data);\n        //console.log(this.staging);\n        this.setState(this.staging);\n      });\n  }\n\n  handleClick(id) {\n    console.log(\"handleClick(\" + id + \"): \");\n    const qid = this.staging[id].trigger;\n    switch (this.staging[qid].backend) {\n      case \"presto\":\n        this.runPrestoQuery(qid);\n        break;\n      case \"native\":\n        this.runNativeQuery(qid);\n        break;\n      case \"constant\":\n        this.runConstantQuery(qid);\n        break;\n      default:\n        console.log(\"Unrecognized backend: \" + this.staging[qid].backend);\n        break;\n    }\n  }\n  generateWidget(wspec) {\n    const callbacks = {\n      handleClick: (id) => this.handleClick(id),\n      handleTextChange: (id, event) => this.handleTextChange(id, event),\n      handleSelectChange: (id, event) => this.handleSelectChange(id, event),\n      updateData: (id, d, c) => this.updateData(id, d, c),\n    };\n    return genWidget(wspec, callbacks, this.state, null);\n  }\n\n  render() {\n    return (\n      <div style={{ maxWidth: \"100%\" }}>\n        <ApolloProvider client={client}>\n          {this.spec.widgets.map((spec) => this.generateWidget(spec))}\n        </ApolloProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, useQuery, gql } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}